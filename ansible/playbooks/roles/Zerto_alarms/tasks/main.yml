---

- name: Get Zerto Alarms
  ansible.builtin.uri:
    url: "https://analytics.api.zerto.com/v2/monitoring/alerts"
    method: GET
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{ api_token }}"
    validate_certs: false
    force_basic_auth: yes
    return_content: true
  register: login

- name: Filter alarms with type VPG0010
  set_fact:
    filtered_alarms: "{{ login.json | json_query('[?type==`VPG0010`]') }}"

- name: Set threshold time (24 hours ago)
  set_fact:
    threshold_time: "{{ '%Y-%m-%dT%H:%M:%SZ' | strftime((ansible_date_time.epoch | int) - (24 * 60 * 60)) }}"

- name: Filter alarms older than 24 hours
  set_fact:
    old_alarms: >-
      {{
        filtered_alarms | selectattr('collectionTime', 'lt', threshold_time) | list
      }}

- name: Format filtered alarms into a single string
  set_fact:
    formatted_alarms: |
      {%- for alarm in old_alarms %}
      Issue appeared on: {{ alarm.collectionTime }}
      Severity: {{ alarm.severity }}
      Description: {{ alarm.description }}
      Site Name | Zorg Identifier: {{ alarm.site.name }} | {{ alarm.affectedZorgs }}

      {% endfor %}

# - name: Write results to file
#   copy:
#     content: "{{ formatted_alarms }}"
#     dest: "~/zerto_alarms-{{ ansible_date_time.date }}.txt"
#   delegate_to: 172.16.101.183

- name: Sending an e-mail to ticket queue
  community.general.mail:
    host: smtp.gmail.com
    port: 587
    username: '{{ gmail_smtp_user }}'
    password: '{{ gmail_smtp_pw }}'
    to: '{{ target_email_address }}'
    subject: Daily Zerto RPO Breaches
    body: | 
      Please review the below RPO alarms as they have been active for over 24 consistent hours.
      https://analytics.zerto.com/dashboard

      {{ formatted_alarms }}